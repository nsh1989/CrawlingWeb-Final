{"ast":null,"code":"var _jsxFileName = \"D:\\\\amass\\\\crawlingweb\\\\frontend\\\\src\\\\components\\\\FilterbarComponent.js\";\nimport React, { Component, useState, useEffect } from \"react\";\nimport service from \"../services/service\";\nimport { FormControl, InputLabel, MenuItem, OutlinedInput, Select } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass FilterbarComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.ITEM_HEIGHT = 48;\n    this.ITEM_PADDING_TOP = 8;\n    this.MenuProps = {\n      PaperProps: {\n        style: {\n          maxHeight: this.ITEM_HEIGHT * 4.5 + this.ITEM_PADDING_TOP,\n          width: 250\n        }\n      }\n    };\n\n    this.handleChange = event => {\n      console.log(\"handleChange\");\n      this.setState({\n        selectedOption: event.target.value\n      });\n      console.log(this.state.selectedOption);\n      console.log(\"handleChange\");\n      this.state.selectedOption = event.target.value;\n      console.log(this.state.selectedOption);\n      this.setState({\n        modeloptions: []\n      });\n      this.setState({\n        selectedModelOption: null\n      }); // if(this.state.selectedOption !== null){\n      //     console.log(\"test!!\")\n      //     service.getModels(this.state.selectedOption).then((res)=>{\n      //         this.setState({modeloptions: res.data})\n      //     }).then(()=>{\n      //         console.log(this.state.modeloptions);\n      //     });\n      // }\n    };\n\n    this.modelhandleChange = event => {\n      this.setState({\n        selectedModelOption: event.target.value\n      });\n      console.log(this.state.selectedModelOption); // this.setState({modeloptions: []});\n    };\n\n    this.state = {\n      brandoptions: [],\n      selectedOption: null,\n      modeloptions: [],\n      selectedModelOption: null\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"FilterbarComponent componentDidmount fired\");\n    service.getBrands().then(res => {\n      console.log(\"FilterbarComponent, :\", res);\n      this.setState({\n        brandoptions: res.data\n      });\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(\"props: \" + JSON.stringify(this.state.selectedOption));\n    console.log(\"prevProps: \" + JSON.stringify(prevState.selectedOption));\n    console.log(\"state: \" + JSON.stringify(this.state.selectedOption));\n    console.log(\"prevState: \" + JSON.stringify(prevState.selectedOption));\n\n    if (this.state.selectedOption !== prevState.selectedOption) {\n      console.log(\"componentdidupdate\");\n      console.log(this.state.selectedOption);\n      console.log(prevProps.selectedOption);\n      service.getModels(this.state.selectedOption).then(res => {\n        this.setState({\n          modeloptions: res.data\n        });\n      }).then(() => {\n        console.log(this.state.modeloptions);\n      });\n    }\n  } //Brand Select\n\n\n  render() {\n    console.log(\"FilterbarComponent render: \", this.state.brandoptions);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        sx: {\n          m: 1,\n          minWidth: 50,\n          mt: 3\n        },\n        className: \"w-25 h-25\",\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"brand-select-label\",\n          children: \"\\uBE0C\\uB79C\\uB4DC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          labelId: \"brand-select-label\",\n          id: \"brand-select\",\n          value: this.state.selectedOption,\n          onChange: this.handleChange,\n          MenuProps: this.MenuProps,\n          input: /*#__PURE__*/_jsxDEV(OutlinedInput, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 32\n          }, this),\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"All\",\n            children: \"\\uC804\\uCCB4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), this.state.brandoptions.map((option, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: option,\n            children: option\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        sx: {\n          m: 1,\n          minWidth: 50,\n          mt: 3\n        },\n        className: \"w-25 h-25\",\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"brand-select-label\",\n          children: \"\\uBAA8\\uB378\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          labelId: \"model-select-label\",\n          id: \"model-select\",\n          value: this.state.selectedModelOption,\n          onChange: this.modelhandleChange,\n          MenuProps: this.MenuProps,\n          input: /*#__PURE__*/_jsxDEV(OutlinedInput, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 32\n          }, this),\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"All\",\n            children: \"\\uC804\\uCCB4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), this.state.modeloptions.map((option, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: option,\n            children: option\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default FilterbarComponent;","map":{"version":3,"sources":["D:/amass/crawlingweb/frontend/src/components/FilterbarComponent.js"],"names":["React","Component","useState","useEffect","service","FormControl","InputLabel","MenuItem","OutlinedInput","Select","FilterbarComponent","constructor","props","ITEM_HEIGHT","ITEM_PADDING_TOP","MenuProps","PaperProps","style","maxHeight","width","handleChange","event","console","log","setState","selectedOption","target","value","state","modeloptions","selectedModelOption","modelhandleChange","brandoptions","componentDidMount","getBrands","then","res","data","componentDidUpdate","prevProps","prevState","JSON","stringify","getModels","render","m","minWidth","mt","map","option","index"],"mappings":"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","sourcesContent":["import React, {Component, useState, useEffect} from \"react\";\r\nimport service from \"../services/service\";\r\nimport {FormControl, InputLabel, MenuItem, OutlinedInput, Select} from \"@material-ui/core\";\r\n\r\nclass FilterbarComponent extends Component{\r\n\r\n    ITEM_HEIGHT = 48;\r\n    ITEM_PADDING_TOP = 8;\r\n    MenuProps = {\r\n        PaperProps: {\r\n            style: {\r\n                maxHeight: this.ITEM_HEIGHT * 4.5 + this.ITEM_PADDING_TOP,\r\n                width: 250,\r\n            },\r\n        },\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            brandoptions : [],\r\n            selectedOption: null,\r\n            modeloptions : [],\r\n            selectedModelOption: null,\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        console.log(\"FilterbarComponent componentDidmount fired\");\r\n        service.getBrands().then( (res) =>{\r\n            console.log(\"FilterbarComponent, :\", res);\r\n            this.setState({brandoptions: res.data});\r\n        });\r\n    };\r\n    componentDidUpdate(prevProps, prevState) {\r\n        console.log(\"props: \" + JSON.stringify(this.state.selectedOption));\r\n        console.log(\"prevProps: \" + JSON.stringify(prevState.selectedOption));\r\n        console.log(\"state: \" + JSON.stringify(this.state.selectedOption));\r\n        console.log(\"prevState: \" + JSON.stringify(prevState.selectedOption));\r\n        if(this.state.selectedOption !== prevState.selectedOption){\r\n            console.log(\"componentdidupdate\");\r\n            console.log(this.state.selectedOption);\r\n            console.log(prevProps.selectedOption);\r\n            service.getModels(this.state.selectedOption).then((res)=>{\r\n                this.setState({modeloptions: res.data})\r\n            }).then(()=>{\r\n                console.log(this.state.modeloptions);\r\n            });\r\n        }\r\n    }\r\n    //Brand Select\r\n    handleChange = (event) => {\r\n        console.log(\"handleChange\")\r\n        this.setState({selectedOption: event.target.value});\r\n        console.log(this.state.selectedOption)\r\n        console.log(\"handleChange\")\r\n        this.state.selectedOption=event.target.value;\r\n        console.log(this.state.selectedOption)\r\n        this.setState({modeloptions: []});\r\n        this.setState({selectedModelOption: null});\r\n\r\n        // if(this.state.selectedOption !== null){\r\n        //     console.log(\"test!!\")\r\n        //     service.getModels(this.state.selectedOption).then((res)=>{\r\n        //         this.setState({modeloptions: res.data})\r\n        //     }).then(()=>{\r\n        //         console.log(this.state.modeloptions);\r\n        //     });\r\n        // }\r\n\r\n    };\r\n\r\n    //model Select\r\n    modelhandleChange = (event) => {\r\n        this.setState({selectedModelOption: event.target.value});\r\n        console.log(this.state.selectedModelOption)\r\n        // this.setState({modeloptions: []});\r\n    };\r\n\r\n    render() {\r\n        console.log(\"FilterbarComponent render: \", this.state.brandoptions);\r\n        return(\r\n            <div>\r\n                <FormControl sx={{m:1, minWidth: 50, mt:3}} className=\"w-25 h-25\">\r\n                    <InputLabel id=\"brand-select-label\">브랜드</InputLabel>\r\n                    <Select\r\n                        labelId=\"brand-select-label\"\r\n                        id=\"brand-select\" value={this.state.selectedOption}\r\n                        onChange={this.handleChange}\r\n                        MenuProps={this.MenuProps}\r\n                        input={<OutlinedInput />}\r\n                    >\r\n                        <MenuItem value=\"\"></MenuItem>\r\n                        <MenuItem value=\"All\">전체</MenuItem>\r\n                        {this.state.brandoptions.map( (option, index) => (\r\n                            <MenuItem value={option}>{option}</MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl>\r\n                <FormControl sx={{m:1, minWidth: 50, mt:3}} className=\"w-25 h-25\">\r\n                    {/*////model*/}\r\n                    <InputLabel id=\"brand-select-label\">모델</InputLabel>\r\n                    <Select\r\n                        labelId=\"model-select-label\"\r\n                        id=\"model-select\" value={this.state.selectedModelOption}\r\n                        onChange={this.modelhandleChange}\r\n                        MenuProps={this.MenuProps}\r\n                        input={<OutlinedInput />}\r\n                    >\r\n                        <MenuItem value=\"\"></MenuItem>\r\n                        <MenuItem value=\"All\">전체</MenuItem>\r\n                        {this.state.modeloptions.map( (option, index) => (\r\n                            <MenuItem value={option}>{option}</MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default FilterbarComponent\r\n"]},"metadata":{},"sourceType":"module"}