{"ast":null,"code":"import { combineReducers, createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { routerReducer, routerMiddleware } from \"react-router-redux\";\nimport encarCategory from \"./modules/encarCategory\";\nimport { createBrowserHistory } from \"history\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nconst env = process.env.NODE_ENV;\nconst history = createBrowserHistory();\nconst middlewares = [thunk, routerMiddleware(history)];\n\nif (env === 'development') {\n  const {\n    logger\n  } = require(\"redux-logger\");\n\n  middlewares.push(logger);\n}\n\nconst reducer = combineReducers({\n  encarCategory,\n  routing: routerReducer\n});\nlet store;\n\nif (env === \"development\") {\n  store = initialState => createStore(reducer, composeWithDevTools(applyMiddleware(...middlewares)));\n} else {\n  store = initialState => createStore(reducer, applyMiddleware(...middlewares));\n}\n\nexport { history };\nexport default store();","map":{"version":3,"sources":["D:/amass/crawlingweb/frontend/src/redux/configureStore.js"],"names":["combineReducers","createStore","applyMiddleware","thunk","routerReducer","routerMiddleware","encarCategory","createBrowserHistory","composeWithDevTools","env","process","NODE_ENV","history","middlewares","logger","require","push","reducer","routing","store","initialState"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,aAAT,EAAwBC,gBAAxB,QAAgD,oBAAhD;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AACA,SAAQC,oBAAR,QAAmC,SAAnC;AACA,SAAUC,mBAAV,QAAqC,0BAArC;AAEA,MAAMC,GAAG,GAAGC,OAAO,CAACD,GAAR,CAAYE,QAAxB;AAEA,MAAMC,OAAO,GAAGL,oBAAoB,EAApC;AAEA,MAAMM,WAAW,GAAG,CAACV,KAAD,EAAQE,gBAAgB,CAACO,OAAD,CAAxB,CAApB;;AAEA,IAAGH,GAAG,KAAK,aAAX,EAA0B;AACtB,QAAM;AAAEK,IAAAA;AAAF,MAAaC,OAAO,CAAC,cAAD,CAA1B;;AACAF,EAAAA,WAAW,CAACG,IAAZ,CAAiBF,MAAjB;AACH;;AAED,MAAMG,OAAO,GAAGjB,eAAe,CAAC;AAC5BM,EAAAA,aAD4B;AAE5BY,EAAAA,OAAO,EAAEd;AAFmB,CAAD,CAA/B;AAKA,IAAIe,KAAJ;;AAEA,IAAIV,GAAG,KAAK,aAAZ,EAA2B;AACvBU,EAAAA,KAAK,GAAGC,YAAY,IAChBnB,WAAW,CAACgB,OAAD,EACPT,mBAAmB,CAACN,eAAe,CAAC,GAAGW,WAAJ,CAAhB,CADZ,CADf;AAGH,CAJD,MAIO;AACHM,EAAAA,KAAK,GAAGC,YAAY,IAAInB,WAAW,CAACgB,OAAD,EAAUf,eAAe,CAAC,GAAGW,WAAJ,CAAzB,CAAnC;AACH;;AAED,SAASD,OAAT;AAEA,eAAeO,KAAK,EAApB","sourcesContent":["import { combineReducers, createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { routerReducer, routerMiddleware } from \"react-router-redux\";\r\nimport encarCategory from \"./modules/encarCategory\";\r\nimport {createBrowserHistory} from \"history\";\r\nimport  { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nconst env = process.env.NODE_ENV;\r\n\r\nconst history = createBrowserHistory()\r\n\r\nconst middlewares = [thunk, routerMiddleware(history)];\r\n\r\nif(env === 'development') {\r\n    const { logger } = require(\"redux-logger\");\r\n    middlewares.push(logger);\r\n}\r\n\r\nconst reducer = combineReducers({\r\n    encarCategory,\r\n    routing: routerReducer,\r\n});\r\n\r\nlet store;\r\n\r\nif (env === \"development\") {\r\n    store = initialState =>\r\n        createStore(reducer,\r\n            composeWithDevTools(applyMiddleware(...middlewares)));\r\n} else {\r\n    store = initialState => createStore(reducer, applyMiddleware(...middlewares));\r\n}\r\n\r\nexport { history };\r\n\r\nexport default store();"]},"metadata":{},"sourceType":"module"}